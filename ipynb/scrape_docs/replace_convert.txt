# Method 1: gives AttributeError: 'str' object has no attribute 'str'
top_orgs["Total Visits"] = top_orgs["Total Visits"].apply(lambda x: x.replace('[<>K]','', regex=True).astype(np.float64)* 1000 if "K" in x else x.replace('[<>M]','', regex=True ).astype(np.float64)* 1000000)                                         

# Method 2: gives AttributeError: 'str' object has no attribute 'str'
# for index, row in top_orgs.iterrows():
#     if "K" in row["Total Visits"].str.contains("K"):
#         print(type(row["Total Visits"]))
#         print("found a K")
#     else:
#         print("found something else...")

# Method 3:
# k_top = top_orgs.loc[top_orgs["Total Visits"].str.contains("K")]
# k_top   
## Works if only 12K like strings in the column
# for index, row in k_top.iterrows():
#     print(type(row["Total Visits"]))
#     row["Total Visits"] = row["Total Visits"].apply.replace('[<>K]','') #.astype(np.float64)* 1000
#     print(row["Total Visits"])

## Method 4: df.loc[df.b > 0, 'd'] = 1
# top_orgs = top_orgs.loc[top_orgs["Total Visits"].str.contains("K"),
#                         top_orgs["Total Visits"].replace('[<>K]','',
#                         regex=True).astype(np.float64)* 1000]
## Method 5: 
# for i in range(0, len(array1)):
#     print("found ", array1[i])
#     print(type(array1[i]))
#     if "K" in array1[i]:
#         print("found a K")
   
1

# top_orgs["Total Visits"] = top_orgs["Total Visits"].replace('[<>M]','',regex=True).astype(np.float64)* 1000000
#print(len(k_top.index))



\c dbname username

psql -d database -U  user -W